%% Process and Visualize
% In this Skript all Results of the Hyperheuristics shall be loaded and
% processed. For this, all Results Files are loaded and combined.
% Afterwards the results are visualized and the images are safed and the
% result tables are stored in latex format.

% The Results that are supposed to be calculated:
% 1. Distribution/ Probabilities over Time as line graphs 
% 2. Cummulative number of offspring as Barchart 

%% Experiment 2: Evaluate Crossover Operator Pickrate and Usage
%% Data Loading 
prefix = 'C:\Users\Julia\Documents\MasterRepo\EAXOpt\ToEvaluate\TestDataSet\';
numberOfRuns = 31;
TestSettings = {};

algorithms = ["URXSNSGAII", "URXDNSGAII", "NCRXSNSGAII", "NCRXDNSGAII",...
    "R2RXSNSGAII", "R2RXDNSGAII", "SRXSNSGAII", "SRXDNSGAII"];
problems = {DTLZ2(), DTLZ4(), DTLZ5(), DTLZ7(),DTLZ8(),DTLZ9(), RM1(), ...
    RM2(), RM3(), RM6(), WFG1(), WFG2(), WFG3(), WFG4(), WFG5(), ...
    WFG6(), WFG7(), WFG8(), WFG9()};

for alg = algorithms
    for prob = problems
        TestSettings{end+1} = ...
            struct('algorithm', alg , 'dataset', class(prob{1}), ...
            'M', prob{1}.M, 'D', prob{1}.D); %#ok<SAGROW>
    end
end

for set = TestSettings
    setting = set{1};
    % find files
    filename = append(setting.algorithm, '\', ...
        setting.algorithm, ...
        '_', setting.dataset, ...
        '_M',string(setting.M), '_D', ...
        string(setting.D), '_');
    result = {};

    %% 2.1 plot operator distribution over time on different problems
    % First of all: Find the Median run
    runs = [];
    
    % Collect Data of Median Runs
    for run = runs
        res = load(append(prefix, filename, string(run), '.mat'));
        result{run} = res.xOpProbs;
    end
    
    % TODO Save Data and Plots of Median Runs for each algorithm on each 
    %problem
    
    %% 2.2 plot cumulative offspring generated by each operator in each 
    %problem with each algorithm
    % First of all: Find the Median run
    runs = [];
    
    % Collect Data of Median Runs
    for run = 1:numberOfRuns
        res = load(append(prefix, filename, string(run), '.mat'));
        result{run} = res.xOpProbs;
    end
    
    % TODO Save Data and Plots of Median Runs for each algorithm on each 
    %problem
    
end